%%%%%%%%About the standard_model.INI File%%%%%%%%%%%%%%%%%%%%%%
% User is expected to copy this file to a desired location, e.g. c:\data\config\scanimage
% Location should typically be the same as where one or more USR files are stored
% File should typically be renamed to standard.INI
% Values should then be edited to those appropriate for the ScanImage installation ('rig')
%
% NOTE: All values with example/default value of empty ([],'') can be left as such --
%       depending on context, this will either leave capability disabled or will cause default value to be used.
% NOTE: No space is allowed on either side of equal sign, i.e. each line should be: <varName>=<value>

structure state
	structure init
        % acquisitionBoardID and mirrorOutputBoardID must, at present, be the same
        % They must represent the device name of a National Instruments S-Series Board (e.g. NI PCI 6110) 		
        acquisitionBoardID='Dev1'             % Name of DAQ board for use with PMT acquisition
        mirrorOutputBoardID='Dev1'            % Name of DAQ board for use with galvo mirror output

        % The Analog Output (AO) channels, on board specified by mirrorOutputBoardID, connected to the X and Y mirror command inputs
        % Commercial mirror pairs typically identify the two mirrors as X & Y, with the former typically corresponding to the faster and/or first mirror in the pair
        XMirrorChannelID=0			
        YMirrorChannelID=1	

        % Multiplier, specified in /volts per optical degree/, to convert ScanImage values specified in optical degrees 
        % (e.g. Scan Offset X/Y, Park Amplitude X/Y, Scan Angular Range Fast/Slow, Scan Shift Fast/Slow)
        % to scanner command signal units (volts). Value should be determined from scanner manufacturer documentation/datasheet.
        % For mechanical scanners (galvanometers), note that 'optical' degrees are twice 'mechanical' degrees due to reflection --  
        % i.e. the scanned beam angular range is /twice/ the physical scanner rotation.  For example, Cambridge Technology specifies 
        % a 'command input scale factor' value as 'volts per mechanical degree' -- this is /twice/ the value to be entered here.
        % IMPORTANT: Cambridge Technology often configures system with different command input scale factor than in their datasheet
        % The actual value is specified in the quotation they provide with new systems. 
        % Their standard 6210/6215 3 and 6 mm mirror systems are generally configured as 0.667 and 1 V/mechanical degree,
        % leading to values of 0.333 and 0.5 V/optical degree to be entered here, respectively.
%20110610, was this
%        voltsPerOpticalDegree=0.333  Config 2  
        voltsPerOpticalDegree=0.5  Config 2  

        %The ScanImage start trigger source and destination must be specified 
        %These pertain during FOCUS (always) and GRAB/LOOP (when EXT triggering is disabled)
        %The source is specified by triggerBoardID/triggerLineID -- this is a single digital output (DO) line, on one board, on which ScanImage generates a trigger pulse to start acquisitions
        %The destination is the PFI terminal on which /all/ ScanImage boards are connected to the specified source       
        triggerBoardID='Dev1'                 % Name of DAQ board on which ScanImage start trigger source is generated. Typically the same as acquisitionBoardID.
        triggerLineID=0                       % ID of DO line (assumed to be on port0) which serves as the ScanImage start trigger source.
        triggerInputTerminal='PFI0'           % Terminal on which /all/ ScanImage boards receive input trigger from DO line specified by triggerBoardID/triggerLineID.

        % PFI terminal names (e.g. 'PFI1, PFI2, ...') on which ScanImage can receive external start trigger inputs, if applicable, for synchronization with external software (e.g. Ephus, stimulus generation, and/or behavioral software)
        % Specify as comma-separated lists, if more than one (e.g. 'PFI1, PFI2, ...')
        externalStartTrigTerminals='PFI1'     % For external start triggering, the external source should be connected to selected terminal from this list on /all/ ScanImage boards         

        %The 'Next' triggering feature requires the uses of ONE Counter/Timer channel on ONE of the installed boards (regardless of number of 'nextTrigTerminals' below)
        %NOTE: The Board/CtrID specified for next trigger (if any) and each of the clock export signals (if any) must be mutually exclusive
        %NOTE: Board specified by 'acquisitionBoardID' reserves Ctr0 (CtrID = 0). This cannot be used for next trigger.
 %abb, 20110520
        nextTrigBoardID='Dev2'                    % Name of DAQ board on which next triggers are processed, e.g. 'Dev1'.
        nextTrigCtrID=[1]                      % Counter input channel (e.g. 1 for Ctr1) used by board specified by 'nextTrigBoardID'. Note that 'nextTrigBoardID'/'nextTrigCtrID' combination, if specified, cannot be used for any of the clock export signals.

        % PFI terminal names (e.g. 'PFI1, PFI2, ...') on which ScanImage can receive external next trigger inputs, if applicable, for synchronization with external software (e.g. Ephus, stimulus generation, and/or behavioral software)
        % When one of the 'nextTrigTerminals' is selected in ScanImage, connect the next trigger source to specified terminal on board specified by 'nextTrigBoardID'        
        %NOTE: if 'Next trigger only' option is active in ScanImage, next trigger source should be connected to selected terminal on /all/ ScanImage boards.
 %abb, 20110520
        nextTrigTerminals='PFI5'                  % For next triggering, the source should be connected to selected terminal from this list, generally only on board specified by 'nextTrigBoardID'. However, if 'Next trigger only' option is active in ScanImage, the source should be connected to selected terminal on /all/ ScanImage boards.

        %Clock Export Signals
        %NOTE: Board/CtrID specified for next trigger (if any) and each of the clock export signals (if any) must be mutually exclusive
        %NOTE: Board specified by 'acquisitionBoardID' reserves Ctr0 (CtrID = 0). This cannot be used for any of the clock export signals.
 %abb, 20110520
        frameClockBoardID='Dev2'                  % Name of DAQ board from which frame clock sould be exported, e.g. 'Dev2'
        frameClockCtrID=[0]                    % Counter output channel (e.g. 1 for Ctr1) on which frame clock should be exported, on board specified by frameClockBoardID
        lineClockBoardID=''                   % Name of DAQ board from which line clock sould be exported, e.g. 'Dev2'
        lineClockCtrID=[]                     % Counter output channel (e.g. 1 for Ctr1) on which line clock should be exported, on board specified by lineClockBoardID
        pixelClockBoardID=''                  % Name of DAQ board from which pixel clock sould be exported, e.g. 'Dev2'
        pixelClockCtrID=[]                    % Counter output channel (e.g. 1 for Ctr1) on which pixel clock should be exported, on board specified by pixelClockBoardID     
       
        %parkAngleX/Y specify scanner angular position, in optical degrees, when scanning is inactive. 
        %NOTE: When beam is parked, shutter is closed and Pockels level is at minimum.
        %WARNING: A too-large value can lead beam (even though it should be attenuated/blocked) to leave the microscope's optical train.
 %abb, 20110520
        parkAngleX=0        % Angular position of X scanner, in optical degrees, when beam is 'parked' (i.e. when scanning is inactive)
        parkAngleY=0        % " (Y scanner) "
        %parkAngleX=7.5        % Angular position of X scanner, in optical degrees, when beam is 'parked' (i.e. when scanning is inactive)
        %parkAngleY=7.5        % " (Y scanner) "

        %scanOffsetAngleX/Y specify the 'center' of the laser scan pattern, in optical degrees. 
        %This adjusts the angle of the scanned laser beam relative to optical axis of microscope/objective.
        %This effectively adjusts the lateral centering of the scanned field-of-view.
        %Note that scanOffsetAngleX/Y (unlike other variables in this file) can be modified interactively /during/ ScanImage operation.
        %Use the Align... dialog for this purpose.
        scanOffsetAngleX=0.00        Config 2 Gui gh.configurationGUI.xScanOffset Gui gh.alignGUI.etScanOffsetX Numeric 1  
        scanOffsetAngleY=0.00        Config 2 Gui gh.configurationGUI.yScanOffset Gui gh.alignGUI.etScanOffsetY Numeric 1  
   
        %%%Optional Device Configurations%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %Pockels Cell configuration
        structure eom        
  %abb, 20110520
           pockelsOn=1  % Flag to determine whether Pockels  Cell is being used: 1 = yes, 0 = no

            % Modulator Specifics. Each of up to 3 EOMs (Pockels Cells) must have several variables specified to be enabled.
            % Variables for each Pockels Cell follow format <variableName>N, where N is a number in the range 1-3.
            % ALL variables for each Pockels Cell must be commented(uncommented) below to enable(disable) that Pockels Cell.
            % NOTE: If photodiodeInputBoardIDN value is left empty (default), the Pockels Cell will be uncalibrated (a naive linear calibration between 0 and pockelsVoltageRangeN will be presumed). 
            % A valid acquisition device ID (e.g. 'Dev1') must be provided for photodiode calibration to be used. 
 %abb, 20110520
            beamName1='MaiTai'                  % Descriptive name for beam (e.g. type of laser)
            pockelsBoardID1='Dev2'              % Name of output DAQ board for use with scan laser pockels cell
            pockelsChannelIndex1=0              % Index of output DAQ channel for use to drive scan laser pockels cell.
            pockelsVoltageRange1=1.5            % Pockels cell control voltage ranges from 0 to this value
 %abb, 20110520
            photodiodeInputBoardID1='Dev2'          % Name of Input DAQ board where photocurrent is input, e.g. 'Dev2' If empty, this beam will be left uncalibrated.
            photodiodeInputChannel1=0           % Channel index on input DAQ board where photocurrent is input.           
            photodiodeInputNegative1=0          % Photodiode voltage signal is negative/positive. 0=positive 1=negative
            powerConversion1=10     Config 2    % Conversion factor: <powerConversion> * <photodiodeVoltage> = <powerInMilliWatts>.
            rejected_light1=0       Config 2    % The calibration input comes from accepted/rejected light. 0==accepted 1==rejected
            maxPower1=10                        % The startup values can be set here...
            maxLimit1=100                       % Same as above.
            photodiodeOffset1=0     Config 2    % The 'rest' voltage from the photodiode for this beam (this covers amplifier offset, ambient light, etc).

            %Uncomment next section to add second Pockels Cell (and photodiode, if present)
            %beamName2='Beam 2'                 % Descriptive name for beam (e.g. type of laser)
            %pockelsBoardID2='Dev2'             % Name of output DAQ board for use with scan laser pockels cell
            %pockelsChannelIndex2=1             % Index of output DAQ channel for use to drive scan laser pockels cell.
            %pockelsVoltageRange2=1.5           % Pockels cell control voltage ranges from 0 to this value
            %photodiodeInputBoardID2='Dev2'     % Name of input DAQ board where photocurrent is input, e.g. 'Dev2'. If empty, this beam will be left uncalibrated.
            %photodiodeInputChannel2=1          % Channel index on input DAQ board where photocurrent is input.           
            %photodiodeInputNegative2=0         % Photodiode voltage signal is negative/positive. 0=positive 1=negative
            %powerConversion2=10    Config 2    % Conversion factor: <powerConversion> * <photodiodeVoltage> = <powerInMilliWatts>.
            %rejected_light2=0      Config 2    % The calibration input comes from accepted/rejected light. 0==accepted 1==rejected
            %maxPower2=10                       % The startup values can be set here...
            %maxLimit2=100                      % Same as above.
            %photodiodeOffset2=0    Config 2    % The 'rest' voltage from the photodiode for beam 1 (this covers amplifier offset, ambient light, etc).     
	        
            %Uncomment next section to add third Pockels Cell (and photodiode, if present)
            %beamName3='Beam 3'                 % Descriptive name for beam (e.g. type of laser)
            %pockelsBoardID='Dev2'              % Name of output DAQ board for use with scan laser pockels cell
            %pockelsChannelIndex3=2             % Index of output DAQ channel for use to drive scan laser pockels cell.
            %pockelsVoltageRange3=1.5           % Pockels cell control voltage ranges from 0 to this value
            %photodiodeInputBoardID3='Dev2'     % Name of input DAQ board where photocurrent is input, e.g. 'Dev2'. If empty, this beam will be left uncalibrated.
            %photodiodeInputChannel3=2          % Channel index on input DAQ board where photocurrent is input.           
            %photodiodeInputNegative3=0         % Photodiode voltage signal is negative/positive. 0=positive 1=negative
            %powerConversion3=10    Config 2    % Conversion factor: <powerConversion> * <photodiodeVoltage> = <powerInMilliWatts>.
            %rejected_light3=0      Config 2    % The calibration input comes from accepted/rejected light. 0==accepted 1==rejected
            %maxPower3=10                       % The startup values can be set here...
            %maxLimit3=100                      % Same as above.
            %photodiodeOffset3=0    Config 2    % The 'rest' voltage from the photodiode for this beam (this covers amplifier offset, ambient light, etc).           	        
	   endstructure
	endstructure
	
    %Shutter configuration.
	structure shutter
%abb, 20110520
        shutterOn=1                 % Flag (1 = yes, 0=no) to determine whether shutter is being used
%abb, 20110520
        shutterBoardID='Dev2'       % Name of DAQ board on which the static DIO lines for the shutter(s) will be employed 
%abb, 20110520
        shutterLineIndex=0          % Line index for laser shutter line (assumed to be on Port 0)
        open=1                      % Boolean value indicating TTL level used for open state of laser shutter (0=TTL LO, 1=TTL HI)
        shutterOpenTime=0           % Time, in us, to allow for shutter opening time where needed/appropriate
        
        % shutterBeforeEOM specifies location of shutter relative to (optional) EOM (Pockels)
        % Set 1 (true) if shutter is located before EOM (Pockels); 0 (false) if located after        
        % WARNING: If shutter is located before EOM (Pockels), then light reaches scope - and possibly specimen! - during calibration
        shutterBeforeEOM=0   % Boolean indicating whether to open shutter during EOM (Pockels) calibration. 
    endstructure
	
    % Stage and Z-Focus controls using a Linear Stage Controller
    % NOTE: Empty values in this section, e.g. 'baud', can be left as empty -- 
    %       default values (appropriate for specified controllerType/stageType) will then be used
    structure motor
%abb, 20110520
        motorOn=1           % Flag (1 = yes, 0=no) to determine whether motor device is being used (by any user)
%abb, 20110520
%be careful here, this will change if we add/remove other serial devices, namely the maitai laser
%mp285 is usually COM3, I am using COM2 assuming 'Serial Port Splitter' is running
%back to COM3 while 'serial port splitter' is sharing com3
%
%COM13 when using 'virtual serial ports emulation'
%        port='COM3'             % Serial port for motor device communication, e.g. 'COM2'
        port='COM13'             % Serial port for motor device communication, e.g. 'COM2'
        baud=[]             % Baud rate for serial communication with motor device. Leave empty to use default value for given controller type, or set to override this default. 
        timeout=5           % Time, in seconds, to wait for a reply following a motor controller command, before alerting the user of an error. Long moves must complete within this timeout period. 
        
        controllerType='mp285'      % One of {'mp285', 'mpc200', 'scientifica'}
        stageType=''                % Identify valid stage type for given controller, if needed. At this time, only required if controllerType='scientifica'.

        %Specify, in microns, the finest step size supported by controllerType & stageType combination, in each dimension
        %If left empty, default values for controllerType & stageType combination will be used.
        %IMPORTANT: If one value is set, ALL must be set.
        resolutionX=[]     
        resolutionY=[]
        resolutionZ=[]     

        zDepthPositive=0    % Logical value indicating when true (false), that increasing values of z-axis position correspond to increasing (decreasing) depth in specimen.

%this was added in by Vijay in this new release!!!
        stepDelay=0.3   % Time, in seconds, to delay following stack/cycle motor steps (nominally completed, according to controller) to ensure motor has 'settled' prior to following acquisition

        %Following values should rarely be modified
        posnResolution=0.05 % Resolution, in microns, to enforce on move commands. Positional errors greater than this amount will be flagged.
        velocityFast=[]     % Velocity used for most of large moves, before slowing down for final 100um. See documentation for units/scale definition. If empty, default for given 'controllerType' will be used.
        velocitySlow=[]     % Velocity used for movements < 100um (e.g. stack steps) and at end of large moves for fine control. See documentation for units/scale definition. If empty, default for given 'controllerType' will be used.
	endstructure
endstructure
